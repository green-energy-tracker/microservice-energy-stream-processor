spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  client:
    user-management:
      url: ${SPRING_CLIENT_USER_MANAGEMENT_URL}
      version: ${SPRING_CLIENT_USER_MANAGEMENT_VERSION}
    site-sensor-management:
      url: ${SPRING_CLIENT_SITE_SENSOR_MANAGEMENT_URL}
      version: ${SPRING_CLIENT_SITE_SENSOR_MANAGEMENT_VERSION}
  cloud:
    circuitbreaker:
      resilience4j:
        instances:
          cb-user-management:
            slidingWindowSize: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_SLIDING_WINDOW_SIZE}
            failureRateThreshold: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_FAILURE_RATE}
            minimumNumberOfCalls: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_MIN_NUM_CALL}
            waitDurationInOpenState: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_WAIT_OPEN_STATE}
            permittedNumberOfCallsInHalfOpenState: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_HALF_OPEN_CALL}
            registerHealthIndicator: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_HEALTH_INDICATOR}
          cb-site-sensor-management:
            slidingWindowSize: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_SLIDING_WINDOW_SIZE}
            failureRateThreshold: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_FAILURE_RATE}
            minimumNumberOfCalls: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_MIN_NUM_CALL}
            waitDurationInOpenState: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_WAIT_OPEN_STATE}
            permittedNumberOfCallsInHalfOpenState: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_HALF_OPEN_CALL}
            registerHealthIndicator: ${SPRING_CLOUD_CIRCUIT_BREAKER_USER_HEALTH_INDICATOR}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    properties:
      schema:
        registry:
          cache-capacity: ${SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_CACHE_CAPACITY}
          url: ${SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL}
    topic:
      data-energy-ingest: ${SPRING_KAFKA_TOPIC_DATA_ENERGY_INGEST}
      data-energy-events: ${SPRING_KAFKA_TOPIC_DATA_ENERGY_EVENTS}
management:
  endpoints:
    web:
      exposure:
        include: ${SPRING_MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
graylog:
  host: ${GRAYLOG_HOST}
  port: ${GRAYLOG_PORT}
server:
  port: ${SPRING_SERVER_PORT}